# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# see kafka.server.KafkaConfig for additional details and defaults

############################# Server Basics #############################

auto.leader.rebalance.enable={{auto_leader_rebalance_enable}}
background.threads={{background_threads}}
compression.type={{compression_type}}
leader.imbalance.check.interval.seconds={{leader_imbalance_check_interval_seconds}}
leader.imbalance.per.broker.percentage={{leader_imbalance_per_broker_percentage}}


# The id of the broker. This must be set to a unique integer for each broker.
broker.id={{ nuproj_hostname.split("-")[-1] | regex_search("\d+") }}
broker.rack={{instance_az}}

# Switch to enable topic deletion or not, default value is false
delete.topic.enable={{delete_topic_enable}}

auto.create.topics.enable={{auto_create_topics_enable}}

############################# Socket Server Settings #############################

# The address the socket server listens on. It will get the value returned from
# java.net.InetAddress.getCanonicalHostName() if not configured.
#   FORMAT:
#     listeners = security_protocol://host_name:port
#   EXAMPLE:
#     listeners = PLAINTEXT://your.host.name:9092

# Hostname and port the broker will advertise to producers and consumers. If not set,
# it uses the value for "listeners" if configured.  Otherwise, it will use the value
# returned from java.net.InetAddress.getCanonicalHostName().
advertised.listeners=PLAINTEXT://{{ nuproj_hostname }}.{{hosted_zone}}:9092

# The number of threads handling network requests
num.network.threads={{num_network_threads}}

# The number of threads doing disk I/O
num.io.threads={{num_io_threads}}

# The send buffer (SO_SNDBUF) used by the socket server
socket.send.buffer.bytes={{socket_send_buffer_bytes}}

# The receive buffer (SO_RCVBUF) used by the socket server
socket.receive.buffer.bytes={{socket_receive_buffer_bytes}}


# The maximum size of a request that the socket server will accept (protection against OOM)
socket.request.max.bytes={{socket_request_max_bytes}}


replica.socket.receive.buffer.bytes={{replica_socket_receive_buffer_bytes}}
replica.socket.timeout.ms={{replica_socket_timeout_ms}}
request.timeout.ms={{request_timeout_ms}}
transaction.max.timeout.ms={{transaction_max_timeout_ms}}
transaction.state.log.load.buffer.size={{transaction_state_log_load_buffer_size}}
transaction.state.log.min.isr={{transaction_state_log_min_isr}}
transaction.state.log.num.partitions={{transaction_state_log_num_partitions}}
transaction.state.log.replication.factor={{transaction_state_log_replication_factor}}
transaction.state.log.segment.bytes={{transaction_state_log_segment_bytes}}
transactional.id.expiration.ms={{transactional_id_expiration_ms}}
security.inter.broker.protocol={{security_inter_broker_protocol}}


################# ssl setting ##############################
# All removed.

############################# Log Basics #############################

# A comma seperated list of directories under which to store log files
log.dirs={{ KAFKA_LOG_DIR }}

# The default number of log partitions per topic. More partitions allow greater
# parallelism for consumption, but this will also result in more files across
# the brokers.
num.partitions={{num_partitions}}

default.replication.factor={{default_replication_factor}}

min.insync.replicas={{min_insync_replicas}}

# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.
# This value is recommended to be increased for installations with data dirs located in RAID array.
num.recovery.threads.per.data.dir={{num_recovery_threads_per_data_dir}}

num.replica.fetchers={{num_replica_fetchers}}
offset.metadata.max.bytes={{offset_metadata_max_bytes}}
offsets.commit.required.acks={{offsets_commit_required_acks}}
offsets.commit.timeout.ms={{offsets_commit_timeout_ms}}
offsets.load.buffer.size={{offsets_load_buffer_size}}
offsets.retention.check.interval.ms={{offsets_retention_check_interval_ms}}
offsets.retention.minutes={{offsets_retention_minutes}}
offsets.topic.compression.codec={{offsets_topic_compression_codec}}
offsets.topic.num.partitions={{offsets_topic_num_partitions}}
offsets.topic.replication.factor={{offsets_topic_replication_factor}}
offsets.topic.segment.bytes={{offsets_topic_segment_bytes}}
queued.max.requests={{queued_max_requests}}
quota.consumer.default={{quota_consumer_default}}
quota.producer.default={{quota_producer_default}}
replica.fetch.min.bytes={{replica_fetch_min_bytes}}
replica.fetch.wait.max.ms={{replica_fetch_wait_max_ms}}
replica.high.watermark.checkpoint.interval.ms={{replica_high_watermark_checkpoint_interval_ms}}
replica.lag.time.max.ms={{replica_lag_time_max_ms}}



############################# Log Flush Policy #############################

# Messages are immediately written to the filesystem but by default we only fsync() to sync
# the OS cache lazily. The following configurations control the flush of data to disk.
# There are a few important trade-offs here:
#    1. Durability: Unflushed data may be lost if you are not using replication.
#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.
#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to exceessive seeks.
# The settings below allow one to configure the flush policy to flush data after a period of time or
# every N messages (or both). This can be done globally and overridden on a per-topic basis.

message.max.bytes={{message_max_bytes}}
# The number of messages to accept before forcing a flush of data to disk
log.flush.interval.messages={{log_flush_interval_messages}}

# The maximum amount of time a message can sit in a log before we force a flush
log.flush.offset.checkpoint.interval.ms={{log_flush_offset_checkpoint_interval_ms}}
log.flush.scheduler.interval.ms={{log_flush_scheduler_interval_ms}}
log.flush.start.offset.checkpoint.interval.ms={{log_flush_start_offset_checkpoint_interval_ms}}


############################# Log Retention Policy #############################

# The following configurations control the disposal of log segments. The policy can
# be set to delete segments after a period of time, or after a given size has accumulated.
# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
# from the end of the log.

# The minimum age of a log file to be eligible for deletion
log.retention.hours={{log_retention_hours}}
log.roll.hours={{log_roll_hours}}
log.roll.jitter.hours={{log_roll_jitter_hours}}

# A size-based retention policy for logs. Segments are pruned from the log as long as the remaining
# segments don't drop below log.retention.bytes.
log.retention.bytes={{log_retention_bytes}}


# The maximum size of a log segment file. When this size is reached a new log segment will be created.
log.segment.bytes={{log_segment_bytes}}
log.segment.delete.delay.ms={{log_segment_delete_delay_ms}}

# The interval at which log segments are checked to see if they can be deleted according
# to the retention policies
log.retention.check.interval.ms={{log_retention_check_interval_ms}}

############################# Zookeeper #############################

# Zookeeper connection string (see zookeeper docs for details).
# This is a comma separated host:port pairs, each corresponding to a zk
# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
# You can also append an optional chroot string to the urls to specify the
# root directory for all kafka znodes.
zookeeper.connect={{zookeeper_connect}}
# Timeout in ms for connecting to zookeeper
zookeeper.connection.timeout.ms={{zookeeper_connection_timeout_ms}}
unclean.leader.election.enable={{unclean_leader_election_enable}}
zookeeper.max.in.flight.requests={{zookeeper_max_in_flight_requests}}
zookeeper.session.timeout.ms={{zookeeper_session_timeout_ms}}
zookeeper.set.acl={{zookeeper_set_acl}}
